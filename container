#!/usr/bin/env python


import subprocess
import re
import sys
import os
import signal
import fcntl

arguments=sys.argv[1:]
ROOT=os.path.expanduser("~/Containers")

FUNCTION=arguments[0]
NAME=arguments[1]

UNIONOPTS=f"diff=RW"
def Shell(command,block=True):
	if block:
		process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True,universal_newlines=True)
		return process.communicate()[0]
	else:
		process = subprocess.Popen(command, shell=True,stderr=subprocess.STDOUT,universal_newlines=True)
		

def getContainerProcesses(container):
	return list(map(int,Shell(f"lsof -Fp -- {ROOT}/{container}/merged | cut -c 2-").splitlines()))
	
def Down(command):
	Shell(f"trap {command} EXIT;")


def Loop(command,delay):
	Shell(f'(while true; do "{command}"; sleep {delay}; done) &')

def Mount(IN,OUT):
	PATTERN = re.compile(r'''((?:[^\:"']|"[^"]*"|'[^']*')+)''')
	arrIN = [_ for _ in list(PATTERN.split(IN)) if _ not in ['', ':']]
	if arrIN[0]=='base':
		print(Shell(f"sudo mount --bind {arrIN[1]} diff{OUT}"))
	else:
		Shell(f"sudo mount --bind {ROOT}/{arrIN[0]}{arrIN[1]} diff{OUT}")

def Layer(layer):
	global UNIONOPTS
	UNIONOPTS+=f":{ROOT}/{layer}/diff=RO"
	
def Run(command):
	global UNIONOPTS
	if not UNIONOPTS.endswith(":/=RO"):
		UNIONOPTS+=":/=RO"
		Shell(f"sudo unionfs -o allow_other,suid,dev {UNIONOPTS} merged")
	Shell(f"""sudo chroot merged su system -c "{command}" """,block=False)

def Wait():
	Run("sleep infinity")

def status(container):
	if getContainerProcesses(container):
		return "Started"
	else:
		return "Stopped"
def start(container):
	os.chdir(f"{ROOT}/{container}")
	if status(container)=="Started":
		return f"Container {container} is already started"
	with open("diff/Containerfile") as f:
		code = compile(f.read(), 'diff/Containerfile', 'exec')
		exec(code,globals(),locals())
		
def stop(container):
	os.chdir(f"{ROOT}/{container}")
	if status(container)=="Stopped":
		return f"Container {container} is already stopped"
	for pid in getContainerProcesses(container):
		os.kill(pid,signal.SIGTERM)
	Shell("sudo umount -l merged")

result=globals()[FUNCTION](NAME)
if result is None:
	print(end='')
else:
	print(result)